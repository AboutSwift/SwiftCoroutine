{"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V08isInsideB0SbvpZ":{"name":"isInsideCoroutine","abstract":"<p>Returns <code>true</code> if this property is called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5startyyyycFZ":{"name":"start(_:)","abstract":"<p>Starts a new coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityyyyycXEFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback. Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityxyyxcXElFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityx_q_tyyx_q_tcXEr0_lFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback. Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityx_q_q0_tyyx_q_q0_tcXEr1_lFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5delayyy8Dispatch0D12TimeIntervalOFZ":{"name":"delay(_:)","abstract":"<p>Suspends a coroutine for a certain time.  Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html":{"name":"Coroutine","abstract":"<p>Additional struct with utility methods to work with coroutines.</p>"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerP12scheduleTaskyyyycF":{"name":"scheduleTask(_:)","abstract":"<p>Performs the task at the next possible opportunity.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE05startB0yyyyKcF":{"name":"startCoroutine(_:)","abstract":"<p>Start a new coroutine on the current scheduler.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE5awaityqd__qd__yKXEKlF":{"name":"await(_:)","abstract":"<p>Start a coroutine and await its result. Must be called inside other coroutine.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE15coroutineFutureyAA02CoE0Cyqd__Gqd__yKclF":{"name":"coroutineFuture(_:)","abstract":"<p>Starts a new coroutine and returns its future result.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html":{"name":"CoroutineScheduler","abstract":"<p>A protocol that defines how to execute a task.</p>"},"Extensions/DispatchQueue.html#/s:14SwiftCoroutine0B9SchedulerP12scheduleTaskyyyycF":{"name":"scheduleTask(_:)","parent_name":"DispatchQueue"},"Extensions/Publisher.html#/s:7Combine9PublisherP14SwiftCoroutineE17subscribeCoFutureAD0fG0Cy6OutputQzGyF":{"name":"subscribeCoFuture()","abstract":"<p>Attaches <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> as a subscriber and returns it. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> will receive result only once.</p>","parent_name":"Publisher"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE12DataResponsea":{"name":"DataResponse","abstract":"<p>Undocumented</p>","parent_name":"URLSession"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE14dataTaskFuture3forAC02CoF0Cy10Foundation4DataV0D0_So13NSURLResponseC8responsetGAH3URLV_tF":{"name":"dataTaskFuture(for:)","abstract":"<p>Undocumented</p>","parent_name":"URLSession"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE14dataTaskFuture3forAC02CoF0Cy10Foundation4DataV0D0_So13NSURLResponseC8responsetGAH10URLRequestV_tF":{"name":"dataTaskFuture(for:)","abstract":"<p>Undocumented</p>","parent_name":"URLSession"},"Extensions/URLSession.html":{"name":"URLSession"},"Extensions/Publisher.html":{"name":"Publisher"},"Extensions/DispatchQueue.html":{"name":"DispatchQueue"},"Enums/CoFutureError.html#/s:14SwiftCoroutine13CoFutureErrorO8canceledyA2CmF":{"name":"canceled","abstract":"<p>Undocumented</p>","parent_name":"CoFutureError"},"Enums/CoFutureError.html#/s:14SwiftCoroutine13CoFutureErrorO7timeoutyA2CmF":{"name":"timeout","abstract":"<p>Undocumented</p>","parent_name":"CoFutureError"},"Enums/CoChannelError.html#/s:14SwiftCoroutine14CoChannelErrorO6closedyA2CmF":{"name":"closed","abstract":"<p>Undocumented</p>","parent_name":"CoChannelError"},"Enums/CoChannelError.html#/s:14SwiftCoroutine14CoChannelErrorO8canceledyA2CmF":{"name":"canceled","abstract":"<p>Undocumented</p>","parent_name":"CoChannelError"},"Enums/CoChannelError.html":{"name":"CoChannelError","abstract":"<p>Undocumented</p>"},"Enums/CoFutureError.html":{"name":"CoFutureError","abstract":"<p>Undocumented</p>"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseCACyxGycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC8complete4withys6ResultOyxqd__G_ts5ErrorRd__lF":{"name":"complete(with:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC7successyyxF":{"name":"success(_:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC4failyys5Error_pF":{"name":"fail(_:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC8complete4withyAA0C6FutureCyxG_tF":{"name":"complete(with:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC4taskACyxGxyKc_tcfc":{"name":"init(task:)","abstract":"<p>Starts a new coroutine and initializes future with its result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6resultACyxGs6ResultOyxs5Error_pG_tcfc":{"name":"init(result:)","abstract":"<p>Initializes a future with result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6results6ResultOyxs5Error_pGSgvp":{"name":"result","abstract":"<p>Returns completed result or nil if this future has not been completed yet.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> when the current future is canceled.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6cancelyyF":{"name":"cancel()","abstract":"<p>Cancels the current future.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC5awaitxyKF":{"name":"await()","abstract":"<p>Await for the result of this <code>CoFuture</code> without blocking the current thread. Must be called inside a coroutine.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC5await7timeoutx8Dispatch0G12TimeIntervalO_tKF":{"name":"await(timeout:)","abstract":"<p>Await for the result of this <code>CoFuture</code> without blocking the current thread. Must be called inside a coroutine.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC3mapyACyqd__Gqd__xKclF":{"name":"map(_:)","abstract":"<p>When future is fulfilled, run the provided callback, which performs a synchronous computation and return transformed value.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC7recoveryACyxGxs5Error_pKcF":{"name":"recover(_:)","abstract":"<p>When future is in an error state, run the provided callback, which can recover from the error and return a new value.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC9mapResultyACyqd__Gs0F0Oyqd__s5Error_pGAGyxsAH_pGclF":{"name":"mapResult(_:)","abstract":"<p>When future is fulfilled, run the provided callback, which performs a synchronous computation and return transformed result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC7flatMapyACyqd__GAExclF":{"name":"flatMap(_:)","abstract":"<p>When the current <code>CoFuture</code> is fulfilled, run the provided callback, which will provide a new <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12flatMapErroryACyxGAEs0G0_pcF":{"name":"flatMapError(_:)","abstract":"<p>When the current <code>CoFuture</code> is in an error state, run the provided callback, which","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC13flatMapResultyACyqd__GAEs0G0Oyxs5Error_pGclF":{"name":"flatMapResult(_:)","abstract":"<p>When the current <code>CoFuture</code> is fulfilled, run the provided callback, which will provide a new <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12whenCompleteyyys6ResultOyxs5Error_pGcF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has any result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC11whenSuccessyyyxcF":{"name":"whenSuccess(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has a success result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC11whenFailureyyys5Error_pcF":{"name":"whenFailure(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has a failure result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12whenCanceledyyyycF":{"name":"whenCanceled(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> is canceled.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC9publisher7Combine12AnyPublisherVyxs5Error_pGyF":{"name":"publisher()","abstract":"<p>Returns a publisher that emits result of this <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC13maxBufferSizeSivp":{"name":"maxBufferSize","abstract":"<p>The maximum number of elements that can be stored in a channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC13maxBufferSizeACyxGSi_tcfc":{"name":"init(maxBufferSize:)","abstract":"<p>Initializes a channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC9awaitSendyyxKF":{"name":"awaitSend(_:)","abstract":"<p>Sends the element to this channel, suspending the coroutine while the buffer of this channel is full. Must be called inside a coroutine.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10sendFutureyyAA0cF0CyxGF":{"name":"sendFuture(_:)","abstract":"<p>Adds the future&rsquo;s value to this channel when it will be available.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5offerySbxF":{"name":"offer(_:)","abstract":"<p>Immediately adds the value to this channel, if this doesn’t violate its capacity restrictions, and returns true. Otherwise, just returns false.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12awaitReceivexyKF":{"name":"awaitReceive()","abstract":"<p>Retrieves and removes an element from this channel if it’s not empty, or suspends a coroutine while the channel is empty.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC13receiveFutureAA0cF0CyxGyF":{"name":"receiveFuture()","abstract":"<p>Creates <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> with retrieved value from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC4pollxSgyF":{"name":"poll()","abstract":"<p>Retrieves and removes an element from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC11whenReceiveyyys6ResultOyxAA0cD5ErrorOGcF":{"name":"whenReceive(_:)","abstract":"<p>Adds an observer callback to receive an element from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5countSivp":{"name":"count","abstract":"<p>Returns a number of elements in this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns <code>true</code> if the channel is empty (contains no elements), which means no elements to receive.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5closeSbyF":{"name":"close()","abstract":"<p>Closes this channel. No more send should be performed on the channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC8isClosedSbvp":{"name":"isClosed","abstract":"<p>Returns <code>true</code> if the channel is closed.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC6cancelyyF":{"name":"cancel()","abstract":"<p>Closes the channel and removes all buffered sent elements from it.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> if the channel is canceled.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12makeIterators03AnyF0VyxGyF":{"name":"makeIterator()","abstract":"<p>Make an iterator which successively retrieves and removes values from the channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html":{"name":"CoChannel","abstract":"<p>Channel is a non-blocking primitive for communication between a sender and a receiver."},"Classes/CoFuture.html":{"name":"CoFuture","abstract":"<p>Holder for a result that will be provided later.</p>"},"Classes/CoPromise.html":{"name":"CoPromise","abstract":"<p>A promise to provide a result later.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}